<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">

<title>代码管理</title>
<meta name="Microsoft Border" content="t, default"></head>

<body bgcolor="#EAEAFB" link="#008080"><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>

<table border="0" width="85%" cellspacing="0" cellpadding="0" height="50">
  <tr>
    <td width="20%" height="50"><a href="http://tdb.com.cn"><img src="images/crsc.gif" alt="上海中铁高新软件中心" border="0" WIDTH="148" HEIGHT="42"></a></td>
    <td width="80%" height="50"><img src="_borders/asql.gif" alt="asql.gif (3772 bytes)" WIDTH="500" HEIGHT="40"></td>
  </tr>
</table>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" align="center"><a href="index.htm"><img src="images/intro.gif" alt="产品简介" border="0" WIDTH="93" HEIGHT="19"></a><img src="images/online.gif" alt="联机手册" border="0" WIDTH="93" HEIGHT="19"><img src="images/quote.gif" alt="产品报价" WIDTH="93" HEIGHT="19"><img src="images/back.gif" alt="意见反馈" border="0" WIDTH="93" HEIGHT="19"><img src="images/about.gif" alt="相关产品" WIDTH="93" HEIGHT="19"><a href="mailto:asql@tdb.com.cn"><img src="images/contact.gif" alt="请与我们联系" border="0" WIDTH="93" HEIGHT="19"></a></td>
  </tr>
</table>
</td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><!--msnavigation--><td valign="top">

<hr>
<div align="center"><center>

<table border="0" width="90%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%"><h2 align="center"><font face="楷体_GB2312"><a NAME="_Toc437587434">代码管理</a></font></h2>
    <p ALIGN="JUSTIFY">　　在信息系统中，数据库中存放的有关人员和机构等等的信息大部分是以代码形式存放在数据库中的，也有一部分是汉字信息，但不管数据库中以什么形式存放信息，所要求的输出通常都是汉字信息, 
    包括查询结果的显示输出，打印输出，名册和各类报表的打印输出，等等。将数据库中的代码信息转换或翻译成汉字信息，用以输出称为汉字替换。本章讨论的是信息的分类编码、汉字替换的方式与实现。</p>
    <ol>
      <li><a NAME="_Toc437587435">汉字替换概述</a><br>
      </li>
      <ol>
        <li><a NAME="_Toc437587436">概述</a></li>
        <p ALIGN="JUSTIFY"><br>
        在信息系统中，用汉字作为信息存储的方式是不合理的，其主要原因有：</p>
        <p ALIGN="JUSTIFY">1. 
        用汉字表示具有共性的信息，往往会存在二义性，如助工、 
        助理工程师及工程系列的初级职称等说法，在汉语中表示的意思都是相同的。但是在计算机进行识别和处理时，却认为这是描述了三个不同的对象。</p>
        <p ALIGN="JUSTIFY">2. 汉字信息通常占有的存储空间数倍于代码信息， 
        在信息的存储和传输时都是一个极大的浪费。</p>
        <p ALIGN="JUSTIFY">3. 用汉字来描述对象的最大缺点是数据的不规范性， 
        数据的不规范导致信息的可用性很差，而且无法共享。</p>
        <p ALIGN="JUSTIFY">由于上述的三个原因，信息必须进行编码，使一个对象仅用一个代码来表示，以便于信息的存储、信息的处理和信息的规范化。</p>
        <p ALIGN="JUSTIFY">　　将复杂的事物划分为有规律的事物系列和对象，并按照一定的规则给定一个字符串用于唯一地标定该对象，这就是编码。</p>
        <p ALIGN="JUSTIFY">在信息的存储、处理和传输时均采用代码的形式，在显示信息内容或信息的打印输出时则将代码信息转换成汉字信息，这就是汉字替换，这是管理信息系统的基本要求。</p>
        <li><a NAME="_Toc437587437">汉字替换的应用</a><br>
          <br>
          下面结合一个劳资人事系统（《劳动部劳资人事管理系统》）中代码的应用进行讨论。<p ALIGN="JUSTIFY">　　在信息系统中主要的功能是：数据库维护、查询、统计分析和事务处理。以上功能与汉字替换有关的主要有以下几方面：</p>
          <ol>
            <li><p ALIGN="JUSTIFY">数据库维护<br>
              <br>
              数据库维护的主要功能是增、删、改。就是将数据录入到系统中，并对数据库中的数据进行修改和删除。在增、删、改的过程中，数据处理对象是代码，而用户所需看到的则应是汉字信息。</p>
            </li>
            <li><p ALIGN="JUSTIFY">查询<br>
              <br>
              在查询的整个过程中，其系统内部处理对象都是代码，但与用户交互形成条件的提示和处理结果，在显示和打印时用户需得到的结果则是汉字信息。</p>
            </li>
            <li><p ALIGN="JUSTIFY">条件编辑<br>
              <br>
              统计程序是独立于统计条件和数据的，不同的统计要求只和统计条件有关，为了使用户编辑统计条件更为方便，在系统中设计条件编辑器作为软件工具是一明智之举，使统计条件的编辑更为方便。统计条件编辑中有关域名和代码条件都能用汉字进行提示。</p>
            </li>
            <li><p ALIGN="JUSTIFY">事务处理</p>
            </li>
          </ol>
          <p ALIGN="JUSTIFY">总结以上系统中各功能中的汉字替换的要求，可以将汉字替换归结为以下三方面：</p>
          <ol>
            <li><p ALIGN="JUSTIFY">汉字信息显示<br>
              <br>
              &nbsp;&nbsp;&nbsp; 
              汉字信息显示有两个方面：一个是在数据录入时，另一个是查询结果的显示或打印。　　数据录入是将相应的代码录入到数据库中，为了使数据录入的屏幕直观，并易于操作，我们将数据录入设计成为一定的格式，用中文提示出所需录入数据的内容，在录入时键入的是代码，录入后立即显示出汉字信息，以便于检查和校对。这就是即时替换。</p>
              <p ALIGN="JUSTIFY">　　在查询结果显示时，由于查询是将数据库中的部分信息按给定的查询条件取出，所以取出的是代码信息，为了便于用户查看查询结果库中的信息，应将这些代码信息转换成为汉字信息。</p>
            </li>
            <li><p ALIGN="JUSTIFY">汉字信息打印<br>
              <br>
              &nbsp;&nbsp;&nbsp; 
              在信息系统中有大量的名册要打印，例如花名册和各类人员名册的打印；还有呈报表，履历表等，这些报表的打印都是将有关信息先查询出来，再经过汉字替换然后再把汉字替换的结果打印出来。</p>
              <p ALIGN="JUSTIFY">　　汉字信息的打印主要包含在查询结果的打印中。</p>
            </li>
            <li><p ALIGN="JUSTIFY">代码提示<br>
              <br>
              　　按通常的思维习惯，用户熟悉的某个事物的特征是用汉字来描述的，要将这些信息按规范的代码送进计算机，首先要将这些汉字信息翻译成为代码信息。信息系统中在数据录入时和查询条件构造时需给出代码信息提示，以方便用户的操作。</p>
            </li>
          </ol>
        </li>
      </ol>
      <li><a NAME="_Toc437587438">代码库设计</a><br>
      </li>
      <ol>
        <li><a NAME="_Toc437587439">代码库结构</a></li>
        <p ALIGN="JUSTIFY"><br>
        ASQL的代码库的结构都是一致的。通常ASQL的代码库至少有两个域：</p>
        <p ALIGN="JUSTIFY">E_EXPR 存代码信息，字符型，长度根据代码情况确定。<br>
        C_BRIF 存替换信息，字符型，长度替换字串情况确定。</p>
        <p ALIGN="JUSTIFY">还可再有两个域：</p>
        <p ALIGN="JUSTIFY">C_EXPR 
        该代码的详细解释，不参与具体汉字替换，字符型， 长度不定。</p>
        <p ALIGN="JUSTIFY">RELATION 扩展替换内容， 
        当汉字替换被置成扩展替换时， 例如利用HZTH()函数做汉字替换，用到的汉字解释，字符型，长度视替换字串情况确定。</p>
        <p ALIGN="JUSTIFY">说明：①代码的长度不约束于实际数据库中该域的宽度。</p>
        <p ALIGN="JUSTIFY">②代码库必须依E_EXPR排升序，排序可利用系统分组查询，也可借助于</p>
        <p ALIGN="JUSTIFY">foxBASE的下列命令：</p>
        <p ALIGN="JUSTIFY">C:&gt;TYPE SORTCODE.PRG</p>
        <p ALIGN="JUSTIFY">*代码库排序</p>
        <p ALIGN="JUSTIFY">USE EC_M8 &amp;&amp;打开代码库名<br>
        INDEX ON E_EXPR TO LS &amp;&amp;建索引<br>
        COPY TO LS &amp;&amp;拷贝到临时库<br>
        ZAP &amp;&amp;清空自己<br>
        APPE FROM LS &amp;&amp;添回<br>
        USE &amp;&amp;关闭代码库</p>
        <p ALIGN="JUSTIFY">需要分级提示能力的代码库组织要求：</p>
        <p ALIGN="JUSTIFY">&nbsp;&nbsp;&nbsp; 
        用汉字替换来实现代码提示时，经常遇到代码过多的情况，此时除可用代码辅助查找技术代，还可利用代码组织上的技术。客观事物进行代码化是一个理论性很强的工作，既要考虑到码的正确反映客观事物的内在规律、容易使用，又要考虑到代码的扩充能力，其中常用的一种编码方法是“层次编码”。比如行政区划代码，其中包括了省、地、县的三级信息，这就是一个层次关系。通常的信息系统都是将具有层次关系的客观事物编成层次码，然后基于此实现分级提示的，比如行政区划代码，国标里将它编成６位码，前两位表示省级，中间两位表示地市级，后两位表示区县级。为了实现具有层次关系的代码的分级提示，ASQL规定：</p>
        <p ALIGN="JUSTIFY">层次码的每一级必须有一个码，其表示下级的各码位用“０”填满。</p>
        <p ALIGN="JUSTIFY">比如行政区划代码，其代码库中有如下码段：</p>
        <p ALIGN="JUSTIFY">110000 北京市 第一级“**0000”<br>
        110100 北京市市区 第二级“****00”<br>
        110101 北京市东城区 第三级“******”<br>
        110102 北京市西城区 第三级“******”</p>
        <p ALIGN="JUSTIFY">上面说明中“＊”表示该位为编码数字。</p>
        <li><a NAME="_Toc437587440">工作代码文件的设计</a><br>
          <br>
          　　在一个信息系统常常有多达几十个代码库，这些代码库主要为国标和行业标准，也有部分用户自定义代码。这些代码通常以xBASE的数据库DBF格式存放。但用数据库组织的代码库在程序运行时的汉字替换效率很低，根本无法做到即时替换。<p ALIGN="JUSTIFY">为提高汉字替换的效率，ASQL定义了工作代码文件。工作代码文件由三个统一的文件所构成，即代码段文件、汉字段文件和控制文件。代码段文件将所有代码库中的所有代码按一定规则组织在一起；汉字段文件将所有代码库中的所有汉字信息组织在一起；控制文件登录所有的代码文件名(代码库名)及相应的指针。</p>
          <p ALIGN="JUSTIFY">三个工作代码文件的关系如图3.1所示，具体功能如下：</p>
          <p ALIGN="CENTER"><img SRC="images/Image1.gif" WIDTH="208" HEIGHT="161"></p>
          <p ALIGN="CENTER">图3.1 工作代码库文件结构</p>
          <p ALIGN="JUSTIFY">CODE.COD 代码库控制文件.</p>
          <p ALIGN="JUSTIFY">代码库控制文件包含了所有的代码库信息、代码描述串的索引信息、汉字描述串的索引信息、汉字页的情况、以及所采用的压缩方法等信息。在汉字替换模块的运行过程中，为了提高程序运行的效率，代码库控制文件中的内容都要被加载到内存中，映射为一个控制关系二维表，每一个分量描述一个代码库。</p>
          <p ALIGN="JUSTIFY">DCODE.COD 代码段文件。</p>
          <p ALIGN="JUSTIFY">代码段文件是一个按一定规律组织的不定长文件。代码段文件用来把代码库中的代码段一个一个存放在该文件中。在汉字替换程序运行的过程中，代码段文件的内容也要被加载到内存中，它映射为一个线性表，按照代码库控制文件中存放的代码库编号的顺序把各个代码库中的代码描述信息以压缩方式存储在一起。</p>
          <p ALIGN="JUSTIFY">CCODE.COD 汉字段文件。</p>
          <p ALIGN="JUSTIFY">汉字段描述信息文件是按照代码库控制文件中存放的代码库编号的顺序把各个代码库中的汉字段顺序地存放在该文件中。</p>
          <p ALIGN="JUSTIFY">在汉字替换功能实现中，ASQL定义了一个数据表，其名为：CODE.DBF， 
          它把所有代码库组织在一起，形成一个最底层的关系表，目的是为了把所有的代码库(即原代码库)组织成以上三个文件。</p>
          <p ALIGN="JUSTIFY">它有四个域：E_EXPR，C_EXPR，C_ BRIF，CODE_TYPE。 
          它们的含义是：</p>
          <p ALIGN="JUSTIFY">E_EXPR： 代码库编号，相当于赋予代码库一个编号；<br>
          C_EXPR： 代码库的文件名，如DM8.DBF等，文件名后缀不可省略；</p>
          <p ALIGN="JUSTIFY">这个域也可以这样填：</p>
          <p ALIGN="JUSTIFY"><i>代码库的文件名｀代码域域名｀代码汉字描述域域名｀代码汉字扩展描 
          述域域名</p>
          </i><p ALIGN="JUSTIFY">该描述的四部分中，后面开始的各部分可以省略。这样设计的目的是允 
          许代码域名或解释域名自定义。｀为键盘左上角的键代表的字符。</p>
          <p ALIGN="JUSTIFY">示例：</p>
          <p ALIGN="JUSTIFY">EC_M8`DM`JS<br>
          EM_S8`DMY<br>
          C_BRIF： 代码库的汉字描述(或称中文代码库名)。<br>
          CODE_TYPE：描述代码的类型，通知系统如何压缩该代码文件。<br>
          'S'表示不压缩，只能以字符串形式处理。<br>
          '9'表示该代码为全数字型，可压缩。</p>
          <p ALIGN="JUSTIFY">在将标准代码库转换成工作代码文件时，程序将按CODE.DBF中的记录顺序，将标准代码库一个一个地集成到工作代码文件中，合理地组织好代码库的顺序对存贮空间、运行效率都有很大的好处。</p>
          <p ALIGN="JUSTIFY">下边列出的是CODE.DBF的实例:</p>
          <p ALIGN="JUSTIFY">工作代码库组织文件(CODE.DBF)，同时给出了该代码的码长及最大汉字表示长。</p>
          <p ALIGN="JUSTIFY">代码库编号 代码库名 代码库中文名 码长 汉字表示长 
          代码类型</p>
          <p ALIGN="JUSTIFY">(E_EXPR) (C_EXPR) (C_BRIF) (CODE_TYPE）</p>
          <p ALIGN="JUSTIFY">1 EC_S1 部门名称码 3 12 9<br>
          2 EC_S2 任职单位标识(12) 1 8 9<br>
          3 ECM1 股室单位码 2 8 9<br>
          4 ECM15 任职前身份码 2 10 9<br>
          5 ECM36 语种熟练程度码 1 4 9<br>
          6 EC_M1 基层单位码 3 12 9<br>
          7 EC_M10 民族代码 2 8 9<br>
          8 EC_M11 独立机构标识码 1 10 9<br>
          9 EC_M12 党派名称代码 2 8 9<br>
          10 EC_M14 党政职务级别码 2 4 9</p>
        </li>
      </ol>
      <li><a NAME="_Toc437587441">汉字替换方式</a><br>
      </li>
      <p ALIGN="JUSTIFY">汉字替换有三种：给定域的汉字替换、整库的汉字替换和代码提示。</p>
      <ol>
        <li><a NAME="_Toc437587442">给定域的汉字替换</a><br>
        </li>
        <p ALIGN="JUSTIFY">在ASQL中对数据库中的记录进行录入或维护时，要求在输入代码后，或光标所在的数据项能把汉字立即显示出来。因此必须提供给定域的汉字替换功能。</p>
        <p ALIGN="JUSTIFY">在给定域汉字替换中，我们采用了两种替换方法：</p>
        <ol>
          <li>给定代码库名和代码描述串而返回所给代码描述串的中文描述串( 
            慢速方式)。</li>
          <li>给定代码库描述编号和代码描述串而返回所给代码描述串的中文描述串 
            (快速方式)。</li>
        </ol>
        <p>按汉字替换的功能可以分为以下四种情况：<ol>
          <li>完全替换(或一一对应替换)<br>
            <br>
            所谓完全替换或一一对应替换是指数据库中某一域的内容与对应代码库中的代码一致，该代码对应代码库中的某一汉字内容。例如：性别域，地区域，职称，文化程度，级别，……，等等。这种形式的汉字替换在管理信息系统中是一种主要的形式。</li>
          <li>子串替换<br>
            <br>
            所谓子串替换是指数据库中某一域中的字符串中的某固定子串对应某一指定代码库，而该字符串中的其余内容则是另有含义。</li>
          <p ALIGN="JUSTIFY">子串替换的典型形式是党派名称，党派名称域的宽度为4 
          ，其中的前两位表示是一个党派，后边两位则是表示参加的另一个党派，该域的含义是一个人可以参加两个党派，两个党派的信息放在一个域中表示出来。</p>
          <p ALIGN="JUSTIFY">这种情况在管理信息系统中很多。</p>
          <li>混合型替换<p ALIGN="JUSTIFY">混合型替换是指在数据库中的某一个域中的内容规定为代码和汉字的混合表示一个完整的内容。例如，某一单位名称可以是代码和汉字的混合，这种替换是将字符串中的某一子串进行汉字替换再和其余的汉字信息合并成一个完整的字符串。</p>
            <p ALIGN="JUSTIFY">严格来说，这种情况在管理信息系统数据库设计中应该避免，但是在现有系统中已经存在，对于汉字替换程序来说，还是作为一种替换方式予以实现。而数据库设计的合理性问题和原则问题放到其它有关方面进行讨论，这里不再赘述。</p>
          </li>
          <li>多代码替换<br>
            <br>
            多代码替换是数据库中某一字符串中包含有若干个代码，首先分别对各个代码进行替换，然后将各子串替换的结果合并成一个字符串。</li>
          <p ALIGN="JUSTIFY">例如，党派名称域定义为可填写双党派，这种情况就可以用多代码替换方式将两个党派都替换成汉字。</p>
          <p ALIGN="JUSTIFY">在数据库设计中这是不可取的，应该将各个代码分开为若干个域，但是在实际系统中确有这样的情况存在，所以在这里保留这种替换方式。</p>
        </ol>
        <ol>
          <li><a NAME="_Toc437587443">整库汉字替换</a></li>
          <p ALIGN="JUSTIFY">对给定条件的查询结果或整个原库要替换成汉字库时，必须调用整库汉字替换。在进行整库替换前，必须要把总控库调入内存。读入总控库后，形成一个结构数组，其结构为：</p>
          <p ALIGN="JUSTIFY">在进行整库替换时，其实是二层循环，外层循环是原信息库是否结束，内层循环是以记录域数的循环。在外层循环取出每一条记录，逐域与总控结构数组的efname进行比较，根据替换标记来确定该域是否要进行替换，如果要替换，则把替换后的汉字段写记录，否则把原域内容写域。</p>
          <li><a NAME="_Toc437587444">汉字替换的控制</a></li>
        </ol>
        <p ALIGN="JUSTIFY">在管理信息系统中，大部分的信息是用代码形式存储的，而每个域的汉字替换都有一定的方式，为了使汉字替换的程序独立于数据，因此汉字替换方式是在数据库字段黄中域总控库中进行描述的。域总控库中与汉字替换方式有关的域是REPDESCRIP, 
        汉字替换方式域。</p>
        <p ALIGN="JUSTIFY">下边给出在域总控库的REPDESCRIP域中汉字替换方式的描述规则。</p>
        <p ALIGN="JUSTIFY">1.汉字替换方式的语法格式</p>
        <p ALIGN="JUSTIFY">2.汉字替换方式描述</p>
        <p ALIGN="JUSTIFY">　 (1) 一一对应替换方式</p>
        <p ALIGN="JUSTIFY">方式: 【代码库名】</p>
        <p ALIGN="JUSTIFY">　 例如: EC_M8。 EC_M8表示代码库名。</p>
        <p ALIGN="JUSTIFY"> 
        　在用代码库名表示时，必须注意代码库名不能写错，否则得不到正确的结果。</p>
        <p ALIGN="JUSTIFY">　(2)子串替换</p>
        <p ALIGN="JUSTIFY">方式：【代码库名】(起始位,长度) </p>
        <p ALIGN="JUSTIFY">例: EC_S176(0,5)</p>
        <p ALIGN="JUSTIFY">(起始位,长度)表示代码在域中的位置和长度</p>
        <p ALIGN="JUSTIFY">　(3) 多代码替换</p>
        <p ALIGN="JUSTIFY">方式：【代码库名】(起始位,长度)【代码库名】(起始位,长度)</p>
        <p ALIGN="JUSTIFY">　(4) 不需替换的子串表示方式</p>
        <p ALIGN="JUSTIFY">在一个字符串中如果有某一子串不需替换，而是保留在替换的结果中， 
        可</p>
        <p ALIGN="JUSTIFY">用只有(起始位,长度)信息，而没有代码库信息的方式来表示该几位不替换， 
        直接</p>
        <p ALIGN="JUSTIFY">放到替换结果中去.</p>
        <p ALIGN="JUSTIFY">如:(1,5) 
        表示从输入信息串的第一位到第五位无转换输出.</p>
        <p ALIGN="JUSTIFY">(5) 在替换结果中加入分隔字符</p>
        <p ALIGN="JUSTIFY">在汉字替时，尤其是在多化码组合替换时。有时想在各替换结果中加入自</p>
        <p ALIGN="JUSTIFY">己的分隔字符。</p>
        <p ALIGN="JUSTIFY">方式：('＊')</p>
        <p ALIGN="JUSTIFY">上面的方式表示中“＊”可以用一个或两个西文字符或一个中文字符代替，例</p>
        <p ALIGN="JUSTIFY">如：</p>
        <p ALIGN="JUSTIFY">('.')</p>
        <p ALIGN="JUSTIFY">('..')</p>
        <p ALIGN="JUSTIFY">('和')</p>
        <p ALIGN="JUSTIFY">(6) 各种替换方式的组合</p>
        <p ALIGN="JUSTIFY">将以上各种情况组合输出转换，可用以下例子来说明：</p>
        <p ALIGN="JUSTIFY">如: 方式: (1, 2)EC36(3,3)(3,4)EC36(3, 3)(5, 6) </p>
        <p ALIGN="JUSTIFY">字符串为: '110000'</p>
        <p ALIGN="JUSTIFY">替换后的字符串输出为: '11国际辅助语00国际辅助语00'</p>
        <p ALIGN="JUSTIFY">(7) 代码的分级提示控制</p>
        <p ALIGN="JUSTIFY">当代码库中的代码很多时，代码提示需要多次的翻屏，例如地区代码，共有</p>
        <p ALIGN="JUSTIFY">三千多个，要在三千多个代码中找出所需的代码其速度是很慢的，这给操作带来了</p>
        <p ALIGN="JUSTIFY">麻烦，为了提高代码查找的速度，在系统中设计了代码的分级提示，其表示的规则</p>
        <p ALIGN="JUSTIFY">如下：</p>
        <p ALIGN="JUSTIFY">代码库名(*起始位1,长度)代码库名(*起始位2,长度)......。</p>
        <p ALIGN="JUSTIFY">左括号'('后的'*'表示只用来提示，不参与实际替换。</p>
        <p ALIGN="JUSTIFY">下边以地区码为例表示分级提示的表达式：</p>
        <p ALIGN="JUSTIFY">EC_M8(*1,2)EC_M8(*3,2)EC_M8(*5,2)EC_M8(1,6)</p>
        <p ALIGN="JUSTIFY">3.汉字替换结果控制</p>
        <p ALIGN="JUSTIFY">(1) 汉字域宽度控制</p>
        <p ALIGN="JUSTIFY">汉字替换的结果是将原来用代码存放的信息，改写成为汉字信息，因此其结构就会发生变化，原数据库的宽度就不够了。解决的方法是重新构造一个除宽度外和原数据库结构相同的数据库，填入相应的汉字信息。</p>
        <p ALIGN="JUSTIFY">　　在域总控库中有存放代码的数据库结构的宽度(EWIDE) 
        和存放汉字信息的数据库结构的宽度(CWIDE)，根据该宽度构造汉字数据库，存放替换以后的汉字。</p>
        <p ALIGN="JUSTIFY">(2) 提示控制</p>
        <p ALIGN="JUSTIFY">在管理信息系统中还有一些特殊情况需要处理，这些问题也可归结到汉字替换这部分内容中来，这里讨论的是提示信息，它要求的处理是这样：该域的子串不需要进行汉字替换，但需满足某一编码的规则，并且要提示出来。例如：组织数据库系统的主关键字序号(或编号)，是按某一规则来编写的，在数据录入或维护时，需要将这规则能提示出来。在人事管理系统中，常常是前几位表示的是单位码，甚至是多个子串表示多个单位或部门码。</p>
        <p ALIGN="JUSTIFY">　　　提示控制的表达式定义如下：</p>
        <p ALIGN="JUSTIFY">表达式 = 表达式 | (起始位,长度) 表达式 |【代码库名】(起始位,长度)</p>
        <p ALIGN="JUSTIFY">　　(3) 中文域名提示</p>
        <p ALIGN="JUSTIFY">　　在编辑查询条件时，其操作的过程是这样的：先选查询条件所在的信息集，再从这些集中选出需构造查询条件的域，所显示的信息集名(人员数据库名)和域名都是汉字，而在系统中数据库名和域名都是英文名，这是一种特殊的汉字替换，汉字信息分别从文件总控(系统主控文件的[FILECTL]段)和域总控库(FIELDCTL.DBF) 
        中取得。</p>
        <p ALIGN="JUSTIFY">　 4.代码库维护注意</p>
        <p ALIGN="JUSTIFY">　　在以下情况时要进行代码库的维护工作：</p>
        <p ALIGN="JUSTIFY">(1) 
        系统初建，必须建立自用代码库和维护下发的标准代码库。</p>
        <p ALIGN="JUSTIFY">　　(2) 在代码或者代码库的内容发生变化(需进行代码的增、删、改)时, 
        必须进行代码库的维护工作。当内部机构发生了变化(需进行部门代码库的维护)，指标体系发生了变化(在系统中增加了新的自用域或改变了原数据集的定义)，以及国家标准发生了变化(下发了新的国家标准代码库)等等。</p>
        <li><b><a NAME="_Toc437587445">工作代码文件的生成与代码维护</a></b></li>
      </ol>
      <p ALIGN="JUSTIFY">在系统维护菜单项下，选择了代码维护，有两项菜单：工作代码文件生成和小代码库维护。工作代码文件生成是将代码库中的代码集成到工作代码文件中。在代码库进行维护后必须重新生成工作代码文件，否则汉字替换将出错。</p>
      <p ALIGN="JUSTIFY">小代码库维护是对某一个代码库中的代码进行增加、删除和修改。</p>
      <p ALIGN="JUSTIFY">　 1.工作代码文件生成</p>
      <p ALIGN="JUSTIFY">　 
      工作代码库生成是为了适应新的管理信息系统的建立或者原有信息管理系统中代码库的改变(增加)。有以下几种情况必须重新生成工作代码文件：</p>
      <p ALIGN="JUSTIFY">　　(1)系统初建，不生成工作代码文件整个系统就无法运行。 
      工作代码文件一般不作为系统的基本文件下达，只作为工作文件存在。</p>
      <p ALIGN="JUSTIFY">　　(2)原始代码库经过维护，必须重新生成工作代码库。从TGMIS 
      4.0开始，如果通过代码维护菜单功能对代码库进行修改，系统可以自动检测到，从而重建工作代码库。</p>
      <p ALIGN="JUSTIFY">　　(3)新增代码库。</p>
      <p ALIGN="JUSTIFY">　　总之，代码库一旦发生变化，工作代码文件必须重新生成。否则就得不到应有的汉字替换结果。</p>
      <p ALIGN="JUSTIFY">　　工作代码文件是根据工作代码文件组织数据库(CODE.DBF)生成的，凡新增代码库或原代码库换名，必须首先在CODE.DBF 
      库中作必要的登录或修改。</p>
      <p ALIGN="JUSTIFY">2. 代码库维护</p>
      <p ALIGN="JUSTIFY">在管理信息系统中，代码维护是系统维护的主要内容之一，代码库维护有三种方式：新增代码库；删除代码库；代码库维护码。凡经过以上三种代码维护后都必须重新生成工作代码库。</p>
      <p ALIGN="JUSTIFY">代码库的增加和删除都必须对CODE.DBF的记录进行增加和删除。 
      </p>
      <p ALIGN="JUSTIFY">3.小代码库维护操作</p>
      <p ALIGN="JUSTIFY">利用系统所提供的功能对所需进行维护的代码库进行代码的增、删、改操作。</p>
      <p ALIGN="JUSTIFY">操作步骤如下：</p>
      <p ALIGN="JUSTIFY">　　(1) 
      选择系统维护菜单中的代码维护，再选择小代码库维护，选择所需进行维护的代码库。　　</p>
      <p ALIGN="JUSTIFY">(2)屏幕出现的是当前代码库的情况， 
      这时可以对代码库进行维护，用CTRL_B在代码库中添加代码，用CTRL_A在代码库中插入代码，用CTRL_U删除代码库中的代码。</p>
      <p ALIGN="JUSTIFY">　　注意: 
      代码库中的代码必须有序排列且唯一，即前边的代码值小于后边的代码值。</p>
      <p ALIGN="JUSTIFY">　　代码库维护结束，用Esc 
      键存盘退出。然后再在代码维护菜单下选择生成集成代码库，将维护后的代码生成到系统所用的工作代码文件(或称集成代码库)中。不进行这一步工作，新增加的代码在汉字替换和数据检查中均不起作用。</p>
      <p ALIGN="JUSTIFY">当发生其它情况需要对代码库进行维护时应遵循以上原则及步骤，否则将得不到预想的结果。</p>
      <p ALIGN="JUSTIFY">　</p>
      <p ALIGN="JUSTIFY">为了保证汉字替换的顺利进行，应按以下步骤进行代码库的维护工作:</p>
      <p ALIGN="JUSTIFY">(1) 建立自用代码库</p>
      <p ALIGN="JUSTIFY">建立自用代码主要是部门名称代码和自用域所用的代码。</p>
      <p ALIGN="JUSTIFY">　　新增代码库的建立步骤如下：</p>
      <p ALIGN="JUSTIFY">　　① 
      在域控制库中定义域，并给出对应的代码库名。</p>
      <p ALIGN="JUSTIFY">　　② 
      确定编码方式，建立代码库结构，代码库结构必须与数据项的定义相一致，并与该数据项在总控库中的登录相一致。</p>
      <p ALIGN="JUSTIFY">　 ③ 将代码录入到代码库中。</p>
      <p ALIGN="JUSTIFY">　 ④ 
      将代码库中的代码按代码进行排序，去掉不必要的空记录。</p>
      <p ALIGN="JUSTIFY">　 ⑤ 代码库登录到CODE.DBF中。</p>
      <p ALIGN="JUSTIFY">　 ⑥ 
      生成工作代码文件。这样就能按照要求进行汉字替换。</p>
      <p ALIGN="JUSTIFY">(2) 修改下达的国标或行业代码</p>
      <p ALIGN="JUSTIFY">　　对下达的国标或行业的代码库进行维护，必须遵循以下原则：</p>
      <p ALIGN="JUSTIFY">　　① 
      本单位不用的代码可以删除。例如行政区码、学校码等等。</p>
      <p ALIGN="JUSTIFY">　　② 
      国标和行业代码不能重定义。这是个数据的规范化问题。</p>
      <p ALIGN="JUSTIFY">　　③ 
      一般不宜在国标或行业代码库中增加自用代码。如果确有必要， 
      则应按国标或行业的编码原则进行编码，编码规则不可重定义。代码库名也不要重命名。</p>
    </ol>
    </td>
  </tr>
</table>
</center></div>　
<!--msnavigation--></td></tr><!--msnavigation--></table></body>
</html>
