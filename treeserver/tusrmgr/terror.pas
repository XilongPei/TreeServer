{/******************************
*	Module Name:
*		TERROR.PAS
*
*	Abstract:
*		Contains defines for error code which are commonly
*	used in Tree Server. ( It's should synchronized with the terror.h )
*
********************************************************************************/}
unit terror;

interface


const ERROR_SUCCESS = 0;
const TERR_SUCCESS = ERROR_SUCCESS;
const TERR_BASE = 7000;

const TERR_UNKNOWN_ERROR = TERR_BASE;
const TERR_WARN_QUEUE_TOO_SMALL	= (TERR_BASE+1);
const TERR_QUEUE_ERROR = (TERR_BASE+2);
const TERR_QUEUE_FULL = (TERR_BASE+3);
const TERR_QUEUE_EMPTY = (TERR_BASE+4);
const TERR_QUEUE_NO_RESPONSE = (TERR_BASE+5);
const TERR_INVALID_USER = (TERR_BASE+6);
const TERR_INVALID_PARAMETER = (TERR_BASE+8);
const TERR_INVALID_COMMAND = (TERR_BASE+9);
const TERR_SYNC_OBJECT_EXIST = (TERR_BASE+10);
const TERR_INVALID_MESSAGE = (TERR_BASE+11);
const TERR_INVALID_COMPUTER = (TERR_BASE+12);
const TERR_NO_INVALID_TED = (TERR_BASE+13);
const TERR_INVALID_TED_LIBRARY = (TERR_BASE+14);
const TERR_INVALID_TED_COMMAND = (TERR_BASE+15);
const TERR_INVALID_TED_ENTRY = (TERR_BASE+16);
const TERR_INVALID_TED_CAPABILITY = (TERR_BASE+17);
const TERR_INVALID_TED_TIMER = (TERR_BASE+18);
const TERR_INVALID_TED_IDLE = (TERR_BASE+19);
const TERR_INVALID_TED_TIMEOUT = (TERR_BASE+20);
const TERR_INVALID_TED_ENABLE = (TERR_BASE+21);
const TERR_TED_DISABLE = (TERR_BASE+22);
const TERR_TED_LAOD_FAILURE = (TERR_BASE+23);
const TERR_TED_ERROR_ENTRY = (TERR_BASE+24);
const TERR_INVALID_REQUEST = (TERR_BASE+25);
const TERR_NO_TEINFO_ENTRY = (TERR_BASE+26);
const TERR_INVALID_FLAG	 = (TERR_BASE+27);
const TERR_INVALID_TASKTABLE = (TERR_BASE+28);
const TERR_ADJUST_TASKTABLE = (TERR_BASE+29);
const TERR_INVALID_TASK	 = (TERR_BASE+30);
const TERR_NAMEDPIPE_TIMEOUT = (TERR_BASE+31);
const TERR_INVALID_TASK_LOCATION = (TERR_BASE+32);
const TERR_ACCESS_VIOLATION = (TERR_BASE+33);
const TERR_INVALID_ADDRESS = (TERR_BASE+34);
const TERR_INVALID_AUTHSERVER = (TERR_BASE+35);
const TERR_ALLOC_EXCHBUF_FAILURE = (TERR_BASE+36);
const TERR_NOT_LOGON = (TERR_BASE+37);
const TERR_CLIENT_CLOSE = (TERR_BASE+38);
const TERR_SERVICE_CLOSE = (TERR_BASE+39);
const TERR_NOT_ALL_COPYED = (TERR_BASE+40);
const TERR_SCRIPTS_TOO_LONG = (TERR_BASE+41);

const TACCOUNT_ERROR_BASE = 7500;

const TERR_USER_DB_INTERNAL_ERROR = (TACCOUNT_ERROR_BASE+1);
const TERR_USER_DB_IN_USE = (TACCOUNT_ERROR_BASE+2);
const TERR_CREATE_USER_DB = (TACCOUNT_ERROR_BASE+3);
const TERR_OPEN_USER_DB = (TACCOUNT_ERROR_BASE+4);
const TERR_CLOSE_USER_DB = (TACCOUNT_ERROR_BASE+5);
const TERR_READ_USER_DB = (TACCOUNT_ERROR_BASE+6);
const TERR_WRITE_USER_DB = (TACCOUNT_ERROR_BASE+7);
const TERR_NO_USER_DB = (TACCOUNT_ERROR_BASE+8);
const TERR_USER_ALREADY_EXIST = (TACCOUNT_ERROR_BASE+9);
const TERR_USER_NOT_EXIST = (TACCOUNT_ERROR_BASE+10);
const TERR_INVALID_USER_NAME = (TACCOUNT_ERROR_BASE+11);
const TERR_INVALID_PASSWORD = (TACCOUNT_ERROR_BASE+12);
const TERR_INVALID_PATH = (TACCOUNT_ERROR_BASE+13);
const TERR_INVALID_CNAME = (TACCOUNT_ERROR_BASE+14);
const TERR_INVALID_LOGON_HOURS = (TACCOUNT_ERROR_BASE+15);
const TERR_INVALID_ACCESS_MASK = (TACCOUNT_ERROR_BASE+16);
const TERR_INVALID_LOGON_COMPUTER = (TACCOUNT_ERROR_BASE+17);
const TERR_USER_LOCKED = (TACCOUNT_ERROR_BASE+18);
const TERR_CAN_NOT_ACCESS = (TACCOUNT_ERROR_BASE+19);

{DWORD GetErrorMessage (
 	DWORD dwLastError,
 	LPTSTR lpBuffer,
        DWORD cbBuffer );}
implementation
end.








